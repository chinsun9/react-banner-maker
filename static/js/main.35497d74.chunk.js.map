{"version":3,"sources":["modules/canvas/actions.ts","modules/canvas/index.ts","modules/common/utils.ts","modules/history/index.ts","modules/history/actions.ts","components/Header.tsx","hooks/useHistory.tsx","hooks/useCanvasActions.tsx","components/HistoryItem.tsx","components/HistoryButtons.tsx","hooks/useSetHistory.tsx","components/HistoryList.tsx","hooks/useCanvas.tsx","components/SettingCanvasSize.tsx","components/SideTab.tsx","components/Canvas.tsx","components/Textfield.tsx","components/SettingCanvasDetail.tsx","components/ExportButtons.tsx","hooks/useAddHistory.tsx","modules/common/copyToClipboard.js","App.tsx","serviceWorker.ts","modules/index.ts","index.tsx","modules/canvas/reducer.ts","modules/history/reducer.ts"],"names":["SET_CANVAS_SIZE","SET_CANVAS_TEXT","SET_CANVAS_FONT_SIZE","SET_CANVAS_FONT_COLOR","SET_CANVAS_BACKGROUND_COLOR","SET_CANVAS_COLOR","SET_CANVAS_DATA_URL","setCanvasSize","createAction","setCanvasText","setCanvasFontSize","setCanvasFontColor","setCanvasBackgroundColor","setCanvasColor","setCanvasDataURL","randomColorGenerator","bg_colour","Math","floor","random","toString","slice","getColorByBgColor","bgColor","parseInt","replace","saveAs","uri","filename","link","document","createElement","download","href","body","appendChild","click","removeChild","window","open","ADD_HISTORY","SET_HISTORY","REMOVE_HISTORY","addHistory","setHistory","Header","className","useHistory","useSelector","state","history","useCanvasActions","dispatch","useDispatch","onChangeCanvasSize","useCallback","inputValue","onChangeCanvasText","text","onChangeCanvasFontSize","size","onChangeCanvasFontColor","color","onChangeCanvasBackgroundColor","randomCanvasColor","colors","onChangeCanvas","dataURL","HistoryItem","styles","reactCSS","default","BackgroundColor","background","value","background_color","font_color","style","onClick","HistoryButtons","list","useSetHistory","inputRef","useRef","onReaderLoad","event","obj","JSON","parse","target","result","forEach","i","console","info","id","error","alert","type","name","onChange","e","preventDefault","files","reader","FileReader","onload","readAsText","ref","hidden","current","length","a","URL","createObjectURL","Blob","stringify","setAttribute","HistoryList","map","key","useCanvas","canvas","SettingCanvasSize","width","height","Number","placeholder","min","SideTab","viewBox","focusable","data-icon","fill","aria-hidden","d","Canvas","canvasRef","font_size","useEffect","ctx","clearRect","backgroundColor","fillStyle","fillRect","fontSize","font","textBaseline","textAlign","defaultWidth","defaultHeight","fontHeight","lines","split","line","index","middle","h","fillText","mid","_line","reduce","prev","curr","subtract","push","sign","offset","drawCanvas","getContext","toDataURL","Textfield","textfieldStyle","rows","initialBackgroundColorPickerState","displayColorPicker","initialFontColorPickerState","useState","backgroundColorPickerState","setBackgroundColorPickerState","fontColorPickerState","setFontColorPickerState","colorBackgroundColor","borderRadius","colorFontColor","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","htmlFor","hex","ExportButtons","useAddHistory","querySelector","toBlob","blob","item","ClipboardItem","navigator","clipboard","write","copyToClipboard","last_history_item","App","Boolean","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","message","initBackgroundColor","initialState","createReducer","action","payload","canvasValue","concat","max","historyItem","filter"],"mappings":"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","file":"static/js/main.35497d74.chunk.js","sourcesContent":["import { createAction } from 'typesafe-actions';\n\n// 액션 type\nexport const SET_CANVAS_SIZE = 'canvas/SET_CANVAS_SIZE';\nexport const SET_CANVAS_TEXT = 'canvas/SET_CANVAS_TEXT';\nexport const SET_CANVAS_FONT_SIZE = 'canvas/SET_CANVAS_FONT_SIZE';\nexport const SET_CANVAS_FONT_COLOR = 'canvas/SET_CANVAS_FONT_COLOR';\nexport const SET_CANVAS_BACKGROUND_COLOR = 'canvas/SET_CANVAS_BACKGROUND_COLOR';\nexport const SET_CANVAS_COLOR = 'canvas/SET_CANVAS_COLOR';\nexport const SET_CANVAS_DATA_URL = 'canvas/SET_CANVAS_DATA_URL';\n\n// 액션 생성 함수\nexport const setCanvasSize = createAction(SET_CANVAS_SIZE)<InputValue>();\nexport const setCanvasText = createAction(SET_CANVAS_TEXT)<string>();\nexport const setCanvasFontSize = createAction(SET_CANVAS_FONT_SIZE)<number>();\nexport const setCanvasFontColor = createAction(SET_CANVAS_FONT_COLOR)<string>();\nexport const setCanvasBackgroundColor = createAction(SET_CANVAS_BACKGROUND_COLOR)<string>();\nexport const setCanvasColor = createAction(SET_CANVAS_COLOR)<Colors>();\nexport const setCanvasDataURL = createAction(SET_CANVAS_DATA_URL)<string>();\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\n","export function randomColorGenerator() {\n  let bg_colour = Math.floor(Math.random() * 16777215).toString(16);\n  bg_colour = '#' + ('000000' + bg_colour).slice(-6);\n  return bg_colour;\n}\n\nexport function getColorByBgColor(bgColor: string) {\n  if (!bgColor) {\n    return '';\n  }\n  return parseInt(bgColor.replace('#', ''), 16) > 0xffffff / 2 ? '#000000' : '#ffffff';\n}\n\nexport function saveAs(uri: string, filename: string) {\n  const link = document.createElement('a');\n  if (typeof link.download === 'string') {\n    link.href = uri;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } else {\n    window.open(uri);\n  }\n}\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\n","import { createAction } from 'typesafe-actions';\nimport { Canvas } from '../canvas';\nimport { HistoryState } from './types';\n\n// 액션 type\nexport const ADD_HISTORY = 'history/ADD_HISTORY';\nexport const SET_HISTORY = 'history/SET_HISTORY';\nexport const REMOVE_HISTORY = 'history/REMOVE_HISTORY';\n\n// 액션 생성 함수\nexport const addHistory = createAction(ADD_HISTORY)<Canvas>();\nexport const setHistory = createAction(SET_HISTORY)<HistoryState>();\nexport const removeHistory = createAction(REMOVE_HISTORY)<number>();\n","import React from 'react';\n\nexport default function Header() {\n  return (\n    <div className=\"Header row text-center mb-3\">\n      <a href=\"https://chinsun9.github.io/react-banner-maker/\">\n        <h1>react-banner-maker</h1>\n      </a>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { RootState } from '../modules';\n\nexport default function useHistory() {\n  const history = useSelector((state: RootState) => state.history);\n\n  return history;\n}\n","import { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport {\n  setCanvasDataURL,\n  setCanvasSize,\n  setCanvasText,\n  setCanvasFontSize,\n  setCanvasFontColor,\n  setCanvasBackgroundColor,\n  setCanvasColor,\n} from '../modules/canvas';\n\nexport default function useCanvasActions() {\n  const dispatch = useDispatch();\n\n  const onChangeCanvasSize = useCallback((inputValue: InputValue) => dispatch(setCanvasSize(inputValue)), [dispatch]);\n  const onChangeCanvasText = useCallback((text) => dispatch(setCanvasText(text)), [dispatch]);\n  const onChangeCanvasFontSize = useCallback((size) => dispatch(setCanvasFontSize(size)), [dispatch]);\n  const onChangeCanvasFontColor = useCallback((color) => dispatch(setCanvasFontColor(color)), [dispatch]);\n  const onChangeCanvasBackgroundColor = useCallback((color) => dispatch(setCanvasBackgroundColor(color)), [dispatch]);\n  const randomCanvasColor = useCallback((colors: Colors) => dispatch(setCanvasColor(colors)), [dispatch]);\n  const onChangeCanvas = useCallback((dataURL) => dispatch(setCanvasDataURL(dataURL)), [dispatch]);\n\n  return {\n    onChangeCanvas,\n    randomCanvasColor,\n    onChangeCanvasSize,\n    onChangeCanvasText,\n    onChangeCanvasFontSize,\n    onChangeCanvasFontColor,\n    onChangeCanvasBackgroundColor,\n  };\n}\n","import React from 'react';\nimport { History } from '../modules/history';\nimport reactCSS from 'reactcss';\n\nimport './HistoryItem.css';\nimport useCanvasActions from '../hooks/useCanvasActions';\n\ntype HistoryItemProps = {\n  history: History;\n};\n\nfunction HistoryItem({ history }: HistoryItemProps) {\n  const { randomCanvasColor } = useCanvasActions();\n\n  const onApply = () => {\n    const { background_color, font_color } = history.value;\n\n    randomCanvasColor({\n      background_color: background_color,\n      font_color: font_color,\n    });\n  };\n\n  const styles = reactCSS({\n    default: {\n      BackgroundColor: {\n        background: `${history.value.background_color}`,\n        color: `${history.value.font_color}`,\n      },\n    },\n  });\n\n  return (\n    <div className={`col-1 HistoryItem`} style={styles.BackgroundColor} onClick={onApply}>\n      <span className=\"remove\">\n        <strong>A</strong>\n      </span>\n    </div>\n  );\n}\n\nexport default HistoryItem;\n","import React, { useRef } from 'react';\nimport useHistory from '../hooks/useHistory';\nimport useSetHistory from '../hooks/useSetHistory';\nimport { History } from '../modules/history';\nimport './HistoryButtons.css';\n\nexport default function HistoryButtons() {\n  const setHistory = useSetHistory();\n  const history = useHistory();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const onImport = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) return;\n\n    // 같은 파일을 업로드할떄 onchange가 발동안해서 초기화\n    inputRef.current.value = '';\n    inputRef.current.click();\n  };\n\n  const onExport = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    if (history.length === 0) {\n      console.info('히스토리가 비어있음');\n      return;\n    }\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(\n      new Blob([JSON.stringify(history, null, 2)], {\n        type: 'text/plain',\n      })\n    );\n    a.setAttribute('download', 'banner maker color history.json');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    if (!e.target.files) return;\n\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(e.target.files[0]);\n\n    // setFileState({ selectedFile: e.target.files[0] });\n  };\n\n  const onReaderLoad = (event: any) => {\n    const obj = JSON.parse(event.target.result) as History[];\n\n    // json파일이 적절한지 검사..\n    try {\n      obj.forEach((i: History) => {\n        console.info(i.id, i.value.background_color, i.value.font_color);\n      });\n    } catch (error) {\n      console.error('적절한 형식이 아닙니다.');\n      alert('적절한 형식이 아닙니다.');\n      return;\n    }\n\n    setHistory(obj);\n  };\n\n  return (\n    <div className=\"HistoryButtons row\">\n      <input type=\"file\" name=\"history_file\" id=\"history_file\" onChange={onChangeHandler} ref={inputRef} hidden />\n      <button type=\"button\" className=\"btn btn-second\" onClick={onImport}>\n        <i className=\"fas fa-upload\"></i>\n        import\n      </button>\n      <button type=\"button\" className=\"btn btn-second\" onClick={onExport}>\n        <i className=\"fas fa-download\"></i>\n        export\n      </button>\n    </div>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport { HistoryState, setHistory } from '../modules/history';\n\nexport default function useSetHistory() {\n  const dispatch = useDispatch();\n\n  return useCallback((list: HistoryState) => dispatch(setHistory(list)), [dispatch]);\n}\n","import React from 'react';\nimport useHistory from '../hooks/useHistory';\nimport HistoryItem from './HistoryItem';\nimport HistoryButtons from './HistoryButtons';\n\nimport './HistoryList.css';\n\nfunction HistoryList() {\n  const history = useHistory();\n\n  if (history.length === 0) return <p>copy, download 버튼을 누를때마다 히스토리에 추가됩니다</p>;\n\n  return (\n    <>\n      {/* <h4>your color history</h4> */}\n      <div className=\"HistoryList row\">\n        {history.map((history) => (\n          <HistoryItem history={history} key={history.id} />\n        ))}\n      </div>\n      <HistoryButtons></HistoryButtons>\n    </>\n  );\n}\n\nexport default HistoryList;\n","import { useSelector } from 'react-redux';\nimport { RootState } from '../modules';\n\nexport default function useCanvas() {\n  const canvas = useSelector((state: RootState) => state.canvas);\n\n  return canvas;\n}\n","import React from 'react';\nimport useCanvas from '../hooks/useCanvas';\nimport useCanvasActions from '../hooks/useCanvasActions';\n\nimport './SettingCanvasSize.css';\n\nfunction SettingCanvasSize() {\n  const { width, height } = useCanvas();\n\n  const { onChangeCanvasSize } = useCanvasActions();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n\n    const { name } = e.target;\n    let value = Number(e.target.value);\n\n    if (value < 1) {\n      value = 1;\n    }\n    onChangeCanvasSize({ name: name, value: value });\n  };\n\n  return (\n    <>\n      <div className=\"SettingCanvasSize row mb-3\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text font-weight-bold\">width</span>\n          </div>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            name=\"width\"\n            value={width}\n            placeholder=\"width\"\n            onChange={onChange}\n            min=\"1\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text font-weight-bold\">height</span>\n          </div>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            name=\"height\"\n            value={height}\n            placeholder=\"height\"\n            onChange={onChange}\n            min=\"1\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SettingCanvasSize;\n","import React from 'react';\n\nexport default function SideTab() {\n  return (\n    <div className=\"sidetab\">\n      <div className=\"sideItem\">\n        <a href=\"https://github.com/chinsun9/react-banner-maker\" target=\"chinsun9 github\">\n          <svg\n            viewBox=\"64 64 896 896\"\n            focusable=\"false\"\n            className=\"\"\n            data-icon=\"github\"\n            width=\"1em\"\n            height=\"1em\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"></path>\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport useCanvas from '../hooks/useCanvas';\nimport useCanvasActions from '../hooks/useCanvasActions';\nimport './Canvas.css';\n\nfunction Canvas() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { width, height, font_color, font_size, background_color, text } = useCanvas();\n\n  const { onChangeCanvas } = useCanvasActions();\n\n  useEffect(() => {\n    const drawCanvas = (ctx: any) => {\n      ctx.clearRect(0, 0, width, height);\n\n      // 폰트\n      const color = font_color;\n      const fontFamily = 'Helvetica';\n\n      // 배경색\n      const backgroundColor = background_color;\n\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, width, height);\n\n      const fontSize = font_size;\n\n      ctx.font = `${fontSize}px ${fontFamily}`;\n      ctx.textBaseline = 'middle';\n      ctx.textAlign = 'center';\n\n      ctx.fillStyle = color;\n\n      const defaultWidth = width / 2;\n      const defaultHeight = height / 2;\n\n      const fontHeight = fontSize * 1.4;\n      const SEPARATOR = '\\n';\n      const lines = text.split(SEPARATOR);\n\n      if (lines.length % 2) {\n        lines.forEach((line, index) => {\n          const middle = parseInt((lines.length / 2).toString(), 10);\n          const h = defaultHeight + (index - middle) * fontHeight;\n          ctx.fillText(line, defaultWidth, h);\n          return null;\n        });\n      } else {\n        const mid = (lines.length - 1) / 2;\n        const offsets = lines\n          .map((_line, index) => index)\n          .reduce((prev: any[], curr) => {\n            const subtract = curr - mid;\n            prev.push([subtract < 0, parseInt(subtract.toString(), 10)]);\n            return prev;\n          }, []);\n        offsets.forEach(([sign, offset], index) => {\n          const position = offset * fontHeight;\n          const e = sign ? (fontHeight / 2) * -1 : fontHeight / 2;\n          const h = defaultHeight + position + e;\n          ctx.fillText(lines[index], defaultWidth, h);\n          return null;\n        });\n      }\n    };\n\n    const canvas = (canvasRef as any).current;\n\n    if (!canvas) {\n      console.info(`no canvas`);\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n\n    //Our draw come here\n    drawCanvas(ctx);\n    onChangeCanvas(canvas.toDataURL());\n  }, [width, height, font_color, font_size, background_color, text, onChangeCanvas]);\n\n  return (\n    <div className=\"row\">\n      <canvas ref={canvasRef} id=\"myCanvas\" width={width} height={height}>\n        Your browser does not support the canvas element.\n      </canvas>\n    </div>\n  );\n}\n\nexport default Canvas;\n","import React, { CSSProperties } from 'react';\nimport useCanvas from '../hooks/useCanvas';\nimport useCanvasActions from '../hooks/useCanvasActions';\nimport './Textfield.css';\n\nfunction Textfield() {\n  const { text, width } = useCanvas();\n\n  const { onChangeCanvasText } = useCanvasActions();\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    e.preventDefault();\n\n    const { value } = e.target;\n    onChangeCanvasText(value);\n  };\n\n  const textfieldStyle: CSSProperties = {\n    width: width,\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"form-group\">\n        <textarea\n          className=\"form-control\"\n          id=\"textfield\"\n          placeholder=\"text here\"\n          rows={3}\n          style={textfieldStyle}\n          value={text}\n          onChange={onChange}\n        ></textarea>\n      </div>\n    </div>\n  );\n}\n\nexport default Textfield;\n","import React, { CSSProperties, useState } from 'react';\nimport { ColorResult, SketchPicker } from 'react-color';\nimport useCanvas from '../hooks/useCanvas';\nimport useCanvasActions from '../hooks/useCanvasActions';\nimport reactCSS from 'reactcss';\n\nimport './SettingCanvasDetail.css';\nimport { getColorByBgColor, randomColorGenerator } from '../modules/common/utils';\n\nfunction SettingCanvasSize() {\n  const { font_size, font_color, background_color } = useCanvas();\n\n  const {\n    randomCanvasColor,\n    onChangeCanvasFontSize,\n    onChangeCanvasFontColor,\n    onChangeCanvasBackgroundColor,\n  } = useCanvasActions();\n\n  // const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   e.preventDefault()\n\n  //   const {name, value} = e.target\n  //   onChangeCanvasSize({name:name,value: Number(value)})\n  // }\n\n  const randomBannerColor = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    const background_color = randomColorGenerator();\n    const font_color = getColorByBgColor(background_color);\n\n    setFontColorPickerState({ ...fontColorPickerState, color: font_color });\n    setBackgroundColorPickerState({\n      ...backgroundColorPickerState,\n      color: background_color,\n    });\n    randomCanvasColor({\n      background_color: background_color,\n      font_color: font_color,\n    });\n  };\n\n  const onChangeFontSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n\n    onChangeCanvasFontSize(Number(e.target.value));\n  };\n\n  const onChangeFontColor = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n\n    setFontColorPickerState({ ...fontColorPickerState, color: e.target.value });\n    onChangeCanvasFontColor(e.target.value);\n  };\n\n  const onChangeBackgroundColor = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n\n    setBackgroundColorPickerState({\n      ...backgroundColorPickerState,\n      color: e.target.value,\n    });\n    onChangeCanvasBackgroundColor(e.target.value);\n  };\n\n  // color test\n\n  type MyState = {\n    displayColorPicker: boolean;\n    color: string;\n  };\n\n  const initialBackgroundColorPickerState: MyState = {\n    displayColorPicker: false,\n    color: background_color,\n  };\n\n  const initialFontColorPickerState: MyState = {\n    displayColorPicker: false,\n    color: font_color,\n  };\n\n  const [backgroundColorPickerState, setBackgroundColorPickerState] = useState(initialBackgroundColorPickerState);\n  const [fontColorPickerState, setFontColorPickerState] = useState(initialFontColorPickerState);\n\n  // font\n  const handleClickFontColor = () => {\n    setFontColorPickerState({\n      ...fontColorPickerState,\n      displayColorPicker: !fontColorPickerState.displayColorPicker,\n    });\n  };\n\n  const handleCloseFontColor = () => {\n    setFontColorPickerState({\n      ...fontColorPickerState,\n      displayColorPicker: false,\n    });\n  };\n\n  const handleChangeFontColor = (color: ColorResult) => {\n    setFontColorPickerState({ ...fontColorPickerState, color: color.hex });\n    onChangeCanvasFontColor(fontColorPickerState.color);\n  };\n\n  // background\n  const handleClickBackgroundColor = () => {\n    setBackgroundColorPickerState({\n      ...backgroundColorPickerState,\n      displayColorPicker: !backgroundColorPickerState.displayColorPicker,\n    });\n  };\n\n  const handleCloseBackgroundColor = () => {\n    setBackgroundColorPickerState({\n      ...backgroundColorPickerState,\n      displayColorPicker: false,\n    });\n  };\n\n  const handleChangeBackgroundColor = (color: ColorResult) => {\n    setBackgroundColorPickerState({\n      ...backgroundColorPickerState,\n      color: color.hex,\n    });\n    onChangeCanvasBackgroundColor(backgroundColorPickerState.color);\n  };\n\n  const styles = reactCSS({\n    default: {\n      colorBackgroundColor: {\n        width: '36px',\n        height: '100%',\n        borderRadius: '2px',\n        background: `${backgroundColorPickerState.color}`,\n      },\n      colorFontColor: {\n        width: '36px',\n        height: '100%',\n        borderRadius: '2px',\n        background: `${fontColorPickerState.color}`,\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: 3,\n      } as CSSProperties,\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      } as CSSProperties,\n    },\n  });\n\n  // color test\n\n  return (\n    <>\n      <div className=\"SettingCanvasDetail row mb-2\">\n        <div className=\"input-group mb-3 \">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text font-weight-bold\" htmlFor=\"inputGroupSelect01\">\n              Font Size\n            </label>\n          </div>\n\n          <input\n            type=\"Number\"\n            name=\"fontsize\"\n            className=\"form-control\"\n            list=\"fontsizelist\"\n            value={font_size}\n            onChange={onChangeFontSize}\n            id=\"inputGroupSelect01\"\n          />\n          <datalist id=\"fontsizelist\">\n            <option value=\"20\">20</option>\n            <option value=\"30\">30</option>\n            <option value=\"40\">40</option>\n            <option value=\"60\">60</option>\n            <option value=\"80\">80</option>\n          </datalist>\n        </div>\n\n        <div id=\"fontColorPicker\" className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text font-weight-bold\" id=\"basic-addon1\">\n              Font\n            </span>\n          </div>\n\n          <input\n            type=\"text\"\n            className=\"form-control input-lg\"\n            value={fontColorPickerState.color}\n            onChange={onChangeFontColor}\n          />\n\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text colorpicker-input-addon\">\n              <div>\n                <div style={styles.swatch} onClick={handleClickFontColor}>\n                  <div style={styles.colorFontColor} />\n                </div>\n                {fontColorPickerState.displayColorPicker ? (\n                  <div style={styles.popover}>\n                    <div style={styles.cover} onClick={handleCloseFontColor} />\n                    <SketchPicker color={fontColorPickerState.color} onChange={handleChangeFontColor} />\n                  </div>\n                ) : null}\n              </div>\n            </span>\n          </div>\n        </div>\n\n        <div id=\"backgroundColorPicker\" className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text font-weight-bold\" id=\"basic-addon1\">\n              Back\n            </span>\n          </div>\n\n          <input\n            type=\"text\"\n            className=\"form-control input-lg\"\n            value={backgroundColorPickerState.color}\n            onChange={onChangeBackgroundColor}\n          />\n\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text colorpicker-input-addon\">\n              <div>\n                <div style={styles.swatch} onClick={handleClickBackgroundColor}>\n                  <div style={styles.colorBackgroundColor} />\n                </div>\n                {backgroundColorPickerState.displayColorPicker ? (\n                  <div style={styles.popover}>\n                    <div style={styles.cover} onClick={handleCloseBackgroundColor} />\n                    <SketchPicker color={backgroundColorPickerState.color} onChange={handleChangeBackgroundColor} />\n                  </div>\n                ) : null}\n              </div>\n            </span>\n          </div>\n\n          <div className=\"input-group-append\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={randomBannerColor} value=\"Random\">\n              Random\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SettingCanvasSize;\n","import React from 'react';\nimport useAddHistory from '../hooks/useAddHistory';\nimport useCanvas from '../hooks/useCanvas';\nimport useHistory from '../hooks/useHistory';\nimport { copyToClipboard } from '../modules/common/copyToClipboard';\nimport { saveAs } from '../modules/common/utils';\nimport './ExportButtons.css';\n\nexport default function ExportButtons() {\n  const { text, dataURL, font_color, background_color } = useCanvas();\n  const history = useHistory();\n\n  const addHistory = useAddHistory();\n\n  const copyBanner = () => {\n    copyToClipboard();\n\n    if (history.length === 0) {\n      addHistory({ font_color, background_color });\n      return;\n    }\n\n    const last_history_item = history[history.length - 1].value;\n    if (last_history_item.background_color === background_color && last_history_item.font_color === font_color) {\n      console.info(`이미 추가되어있음.`);\n      return;\n    }\n    addHistory({ font_color, background_color });\n  };\n\n  const saveBanner = () => {\n    const filename = 'banner-maker ';\n    saveAs(dataURL, filename + text + '.png');\n    addHistory({ font_color, background_color });\n  };\n\n  return (\n    <div className=\"ExportButtons row\">\n      <button type=\"button\" className=\"btn btn-primary\" onClick={copyBanner}>\n        <i className=\"far fa-clipboard\"></i>\n        Copy\n      </button>\n\n      <button type=\"button\" className=\"btn btn-primary\" onClick={saveBanner}>\n        <i className=\"fas fa-image\"></i>\n        Download\n      </button>\n    </div>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport { addHistory } from '../modules/history';\n\nexport default function useAddHistory() {\n  const dispatch = useDispatch();\n\n  return useCallback((canvas) => dispatch(addHistory(canvas)), [dispatch]);\n}\n","// Property 'write' does not exist on type 'Clipboard'.\r\n// ....\r\nexport function copyToClipboard() {\r\n  const canvas = document.querySelector(`#myCanvas`);\r\n  if (!canvas) {\r\n    return;\r\n  }\r\n  canvas.toBlob(function (blob) {\r\n    // eslint-disable-next-line no-undef\r\n    const item = new ClipboardItem({ 'image/png': blob });\r\n    navigator.clipboard.write([item]);\r\n  });\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport HistoryList from './components/HistoryList';\nimport SettingCanvasSize from './components/SettingCanvasSize';\nimport SideTab from './components/SideTab';\nimport Canvas from './components/Canvas';\nimport Textfield from './components/Textfield';\nimport SettingCanvasDetail from './components/SettingCanvasDetail';\nimport ExportButtons from './components/ExportButtons';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App container p-5\">\n        <Header></Header>\n        <SettingCanvasSize></SettingCanvasSize>\n        <Canvas></Canvas>\n        <Textfield></Textfield>\n        <SettingCanvasDetail></SettingCanvasDetail>\n\n        <ExportButtons></ExportButtons>\n\n        <HistoryList />\n      </div>\n      <SideTab></SideTab>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport history from './history';\nimport canvas from './canvas';\n\nconst rootReducer = combineReducers({\n  history,\n  canvas,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createReducer } from 'typesafe-actions';\nimport { getColorByBgColor, randomColorGenerator } from '../common/utils';\nimport {\n  SET_CANVAS_DATA_URL,\n  SET_CANVAS_SIZE,\n  SET_CANVAS_TEXT,\n  SET_CANVAS_FONT_SIZE,\n  SET_CANVAS_FONT_COLOR,\n  SET_CANVAS_BACKGROUND_COLOR,\n  SET_CANVAS_COLOR,\n} from './actions';\nimport { CanvasState, CanvasAction } from './types';\n\nconst initBackgroundColor = randomColorGenerator();\nconst initFontColor = getColorByBgColor(initBackgroundColor);\n\n// 초깃값 설정\nconst initialState: CanvasState = {\n  background_color: initBackgroundColor,\n  font_color: initFontColor,\n  font_size: 40,\n  height: 366,\n  width: 624,\n  text: 'TEXT',\n  dataURL: '',\n};\n\nconst canvas = createReducer<CanvasState, CanvasAction>(initialState, {\n  [SET_CANVAS_SIZE]: (state, action) => {\n    return { ...state, [action.payload.name]: action.payload.value };\n  },\n  [SET_CANVAS_TEXT]: (state, action) => {\n    return { ...state, text: action.payload };\n  },\n  [SET_CANVAS_FONT_SIZE]: (state, action) => {\n    return { ...state, font_size: action.payload };\n  },\n  [SET_CANVAS_FONT_COLOR]: (state, action) => {\n    return { ...state, font_color: action.payload };\n  },\n  [SET_CANVAS_BACKGROUND_COLOR]: (state, action) => {\n    return { ...state, background_color: action.payload };\n  },\n  [SET_CANVAS_FONT_SIZE]: (state, action) => {\n    return { ...state, font_size: action.payload };\n  },\n  [SET_CANVAS_COLOR]: (state, action) => {\n    const { background_color, font_color } = action.payload;\n    return {\n      ...state,\n      background_color: background_color,\n      font_color: font_color,\n    };\n  },\n  [SET_CANVAS_DATA_URL]: (state, action) => {\n    return { ...state, dataURL: action.payload };\n  },\n});\n\nexport default canvas;\n","import { createReducer } from 'typesafe-actions';\nimport { ADD_HISTORY, SET_HISTORY, REMOVE_HISTORY } from './actions';\nimport { HistoryAction, HistoryState } from './types';\n\n// 초깃값 설정\nconst initialState: HistoryState = [\n  // { id: 1, value:{ background_color:'#fff', font_color:'#000',font_size:20,height:300,text:\"hello\",width:300,dataURL:''} },\n  // { id: 2, value:{ background_color:'#000', font_color:'#fff',font_size:30,height:320,text:\"hello2\",width:300,dataURL:''} },\n  // { id: 3, value:{ background_color:'#123', font_color:'#fff',font_size:40,height:340,text:\"hello3\",width:300,dataURL:''} },\n];\n\nconst history = createReducer<HistoryState, HistoryAction>(initialState, {\n  [ADD_HISTORY]: (state, { payload: canvasValue }) =>\n    state.concat({\n      id: Math.max(0, ...state.map((historyItem) => historyItem.id)) + 1,\n      value: canvasValue,\n    }),\n  [SET_HISTORY]: (state, { payload: list }) => {\n    state = list;\n\n    return state;\n  },\n\n  [REMOVE_HISTORY]: (state, { payload: id }) => state.filter((historyItem) => historyItem.id !== id),\n});\n\nexport default history;\n"],"sourceRoot":""}